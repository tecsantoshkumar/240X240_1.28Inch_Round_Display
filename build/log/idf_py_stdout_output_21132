Command: /home/ubuntu12345/.espressif/python_env/idf5.5_py3.10_env/bin/python /home/ubuntu12345/esp-idf/new-esp32/esp-idf/tools/idf_monitor.py -p /dev/ttyUSB0 -b 115200 --toolchain-prefix xtensa-esp32-elf- --target esp32 --revision 0 /home/ubuntu12345/esp-idf/new-esp32/my project/idf_display/240X240 1.2 inch/build/spi_lcd_touch.elf /home/ubuntu12345/esp-idf/new-esp32/my project/idf_display/240X240 1.2 inch/build/bootloader/bootloader.elf -m '/home/ubuntu12345/.espressif/python_env/idf5.5_py3.10_env/bin/python' '/home/ubuntu12345/esp-idf/new-esp32/esp-idf/tools/idf.py'
ets Jun  8 2016 00:22:57

rst:0x1 (POWERON_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:6380
ho 0 tail 12 room 4
load:0x40078000,len:15916
load:0x40080400,len:3860
entry 0x40080638
[0;32mI (29) boot: ESP-IDF v5.5 2nd stage bootloader[0m
[0;32mI (29) boot: compile time Oct  7 2025 23:33:28[0m
[0;32mI (29) boot: Multicore bootloader[0m
[0;32mI (30) boot: chip revision: v1.0[0m
[0;32mI (33) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (36) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (40) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (44) boot: Enabling RNG early entropy source...[0m
[0;32mI (48) boot: Partition Table:[0m
[0;32mI (51) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (57) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (64) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (70) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (77) boot: End of partition table[0m
[0;32mI (80) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=0f6d8h ( 63192) map[0m
[0;32mI (109) esp_image: segment 1: paddr=0001f700 vaddr=3ff80000 size=00020h (    32) load[0m
[0;32mI (109) esp_image: segment 2: paddr=0001f728 vaddr=3ffb0000 size=008f0h (  2288) load[0m
[0;32mI (114) esp_image: segment 3: paddr=00020020 vaddr=400d0020 size=463e4h (287716) map[0m
[0;32mI (219) esp_image: segment 4: paddr=0006640c vaddr=3ffb08f0 size=01c0ch (  7180) load[0m
[0;32mI (222) esp_image: segment 5: paddr=00068020 vaddr=40080000 size=0f3dch ( 62428) load[0m
[0;32mI (254) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (254) boot: Disabling RNG early entropy source...[0m
[0;32mI (265) cpu_start: Multicore app[0m
[0;32mI (273) cpu_start: Pro cpu start user code[0m
[0;32mI (273) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (274) app_init: Application information:[0m
[0;32mI (274) app_init: Project name:     spi_lcd_touch[0m
[0;32mI (278) app_init: App version:      1[0m
[0;32mI (281) app_init: Compile time:     Oct  7 2025 23:33:24[0m
[0;32mI (286) app_init: ELF file SHA256:  b1fdd67d8...[0m
[0;32mI (291) app_init: ESP-IDF:          v5.5[0m
[0;32mI (294) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (298) efuse_init: Max chip rev:     v3.99 [0m
[0;32mI (302) efuse_init: Chip rev:         v1.0[0m
[0;32mI (306) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (312) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (317) heap_init: At 3FFC2FA8 len 0001D058 (116 KiB): DRAM[0m
[0;32mI (323) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (328) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (334) heap_init: At 4008F3DC len 00010C24 (67 KiB): IRAM[0m
[0;32mI (340) spi_flash: detected chip: generic[0m
[0;32mI (342) spi_flash: flash io: dio[0m
[0;33mW (345) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;32mI (358) main_task: Started on CPU0[0m
[0;32mI (368) main_task: Calling app_main()[0m
[0;32mI (368) example: Initialize SPI bus[0m
[0;32mI (368) example: Install panel IO[0m
[0;32mI (368) example: Install GC9A01 panel driver[0m
[0;32mI (368) gc9a01: LCD panel create success, version: 1.2.0[0m
[0;32mI (498) example: Initialize LVGL library[0m
[0;32mI (508) example: Install LVGL tick timer[0m
[0;32mI (508) example: Register io panel event callback for LVGL flush ready notification[0m
[0;32mI (508) example: Create LVGL task[0m
[0;32mI (508) example: Starting LVGL task[0m
[0;32mI (558) example: Display LVGL Meter Widget[0m
[0;32mI (568) main_task: Returned from app_main()[0m
